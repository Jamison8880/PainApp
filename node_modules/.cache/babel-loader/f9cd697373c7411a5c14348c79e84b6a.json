{"ast":null,"code":"var _jsxFileName = \"/Users/jschultz/Desktop/FrontEnd2/src/App_Qualtrics.js\";\nimport './App.css';\nimport AdiaLogo from './AdiaLogo.png';\nimport React, { useState } from \"react\";\nimport axios from 'axios'; //----------------------------------------------------------\n//Following Steps from Canvas: \n// 1.) Importing Firebase into App.js File\n//----------------------------------------------------------\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase'; //----------------------------------------------------------\n//2.) Setting up Config: \n// Configure Firebase.\n//----------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  apiKey: \"AIzaSyBM1b1wpI20J2BWg_u2mO7I5WxEo1SA6jo\",\n  authDomain: \"jsfirebaseproject-c8bde.firebaseapp.com\"\n}; // Initialize Firebase\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(config);\n} //----------------------------------------------------------\n//3.) A State called \"Is Signed in\" is definted. \"\n//----------------------------------------------------------\n\n\nclass SignInScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: false // Local signed-in state.\n\n    };\n    this.uiConfig = {\n      signInFlow: 'popup',\n      // 4.1  From Canvas instructions, i've changed this to email/password authentication\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n      }\n    };\n  }\n\n  //----------------------------------------------------------\n  // 5.) A listener is created that listens for changes in sign in state from Firebase, \n  // and updates your React component state with the new value\n  //----------------------------------------------------------\n  async componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => this.setState({\n      isSignedIn: !!user\n    })); // this.setState({data:token})\n  } // async componentDidMount(){\n  // }\n  //5.1  ^^^^You can additionally save that user object in your React component's state so that you can use it later.\n  // Not sure what this means?\n  // Make sure we un-register Firebase observers when the component unmounts.\n\n\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  } //----------------------------------------------------------\n  // 5.)   In the render function, <StyledFirebaseAuth /> is added to the signed in view with 2 props\n  // Q -What are props? \n  //----------------------------------------------------------\n  //can't do comments in the render function - because inside render is JSX\n  //\n\n\n  render() {\n    //variable isSignedIn keeps track of sign in status\n    // hit command forward slash inside render to auto command\n    if (!this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\",\n            color: \"Green\"\n          },\n          children: \"Welcome to the Pain Questionaire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n          uiConfig: this.uiConfig,\n          firebaseAuth: firebase.auth()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SignedInComponent, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }\n\n} ////HOW DO I GET TOKEN? \n// async componentDidMount() {\n//   //const token = await firebase.auth().\n//   const token = await firebase.auth().currentUser.getIdToken()\n//currentUser.getIdToken()\n//this.setState({data: token})\n// }\n//----------------------------------------------------------\n//----------------------------------------------------------\n// II. SIGNED IN COMPONENT\n//----------------------------------------------------------\n\n\nfunction SignedInComponent() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pain Questionaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: AdiaLogo,\n        width: \"15%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 2\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"https://cornell.ca1.qualtrics.com/jfe/form/SV_9nSqh9eVd3nTWcu\",\n        width: \"900\",\n        height: \"620\",\n        frameborder: \"1\",\n        marginheight: \"2\",\n        marginwidth: \"0\",\n        children: \"Loading\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n} // {const token = await firebase.auth().currentUser.getIdToken()}\n//var LocationOfPain = document.getElementById(\"demo1\").value;\n\n\n_c = SignedInComponent;\n\nasync function SubmitData(Name, Name2, Name3) {\n  const token = await firebase.auth().currentUser.getIdToken();\n  console.log(token); // const response = await fetch('<http://localhost:4000/dev/ReceivingDataFromFrontEnd>', \n  // {headers: { 'Authorization': idToken }})\n  // if (response.status === 401)\n  // {return console.log('unauthorized')}\n  // const order = await response.json()\n  // this.setState({orders: order})\n  // console.log(orders)\n  //alert('Variable is ' +Name );\n  //alert('Variable is ' +token ); //only need plus for concatenating var with string. \n  // TO LOCAL ENVIRONMENT: \n  //axios.post('http://localhost:4000/dev/ReceivingDataFromFrontEnd', \n  //DEPLOYED API: \n  //axios.post('https://ea0x278auf.execute-api.us-east-1.amazonaws.com/dev/ReceivingDataFromFrontEnd', \n\n  axios.post('http://localhost:4000/dev/ReceivingDataFromFrontEnd', {\n    PainLoc: Name,\n    RadiationLoc: Name2,\n    Severity: Name3\n  }); //alert('Data Submitted! Token is: \\r\\n' +token )\n}\n\n_c2 = SubmitData;\n\nfunction GetTheData() {\n  //axios.get('https://ea0x278auf.execute-api.us-east-1.amazonaws.com/dev/SendingDataToFrontEnd').then(BackEndData => {\n  axios.get('http://localhost:4000/dev/SendingDataToFrontEnd').then(BackEndData => {\n    console.log(BackEndData.data);\n    alert(BackEndData.data);\n    var UserName = BackEndData.data.username;\n    var Paragraph = BackEndData.data.paragraph;\n    var Numbers = BackEndData.data.numbers;\n    alert(\"Backend.data.username is: \" + UserName + \"\\r\\n Backend.data.paragraph is: \" + Paragraph + \"\\r\\n Backend.data.numbers is: \" + Numbers);\n  });\n} //Submit Function has to get the data. \n//fetch(URL, put/post/ options)\n//simplest use of fetch takes in one argument - the path to the resource you want to fetch - and returns a promise containing the response \n//when the button clicks, there should be a string that looks like: \n//  fetch mdn in google.\n//----------------------------------------------------------\n// III.   OTHER FUNCTIONS: \n//----------------------------------------------------------\n// function login() {\n//   var userEmail = document.getElementById(\"email_field\").value;\n//   var userPass = document.getElementById(\"password_field\").value; \n//   window.alert(userEmail + ' ' + userPass)\n//   }\n\n\n_c3 = GetTheData;\nexport default SignInScreen; //export default SignedInComponent\n//----------------------------------------------------------\n// I.   END \n//----------------------------------------------------------\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\n/*\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBM1b1wpI20J2BWg_u2mO7I5WxEo1SA6jo\",\n  authDomain: \"jsfirebaseproject-c8bde.firebaseapp.com\",\n  databaseURL: \"https://jsfirebaseproject-c8bde-default-rtdb.firebaseio.com\",\n  projectId: \"jsfirebaseproject-c8bde\",\n  storageBucket: \"jsfirebaseproject-c8bde.appspot.com\",\n  messagingSenderId: \"381754669941\",\n  appId: \"1:381754669941:web:9d748993adba847036313c\",\n  measurementId: \"G-RVGM15FDPY\"\n};\n\n*/\n\n/*\n function App() \n{\n  return (\n    \n    // Why can't this go here? <button > change what's displayed</button>\n//what is a section for? \n    <section className = \"section\"> \n      <div className = \"container has-text-centered\">\n\n        <h1 className = \"title\"> Functions created in App.JS  Displayed here</h1>\n        <div className = \"subtitle\">subtitle goes here - why is this in a div?? </div>\n        \n        <button>Sign in</button>\n        </div>\n    </section>\n  );\n}\n\n*/\n// I.   LANDING PAGE\n//----------------------------------------------------------\n// function LandingPage() \n// {\n//   return (\n//     <div id = \"Main Page\" class = \"main-div\">\n//         <title> LANDING PAGE</title>\n//             <h3> Enter your Credentials</h3>\n//             <input type = \"email\" placeholder = \"Email...\" id = \"email_field\" />\n//             <input type = \"password\" placeholder = \"Password...\" id = \"password_field\"/>\n//             <button onclick = \"login()\"> Login to Account </button>\n//     </div>\n//   )\n// }\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SignedInComponent\");\n$RefreshReg$(_c2, \"SubmitData\");\n$RefreshReg$(_c3, \"GetTheData\");","map":{"version":3,"sources":["/Users/jschultz/Desktop/FrontEnd2/src/App_Qualtrics.js"],"names":["AdiaLogo","React","useState","axios","StyledFirebaseAuth","firebase","config","apiKey","authDomain","apps","length","initializeApp","SignInScreen","Component","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","setState","componentWillUnmount","render","textAlign","color","SignedInComponent","SubmitData","Name","Name2","Name3","token","currentUser","getIdToken","console","log","post","PainLoc","RadiationLoc","Severity","GetTheData","get","then","BackEndData","data","alert","UserName","username","Paragraph","paragraph","Numbers","numbers"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,gBAArB;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;;AAEA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAGA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE;AAFC,CAAf,C,CAOA;;AACA,IAAIH,QAAQ,CAACI,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BL,EAAAA,QAAQ,CAACM,aAAT,CAAuBL,MAAvB;AACD,C,CACD;AACA;AACA;;;AAEA,MAAMM,YAAN,SAA2BX,KAAK,CAACY,SAAjC,CACA;AAAA;AAAA;AAAA,SAEEC,KAFF,GAEU;AACNC,MAAAA,UAAU,EAAE,KADN,CACY;;AADZ,KAFV;AAAA,SASEC,QATF,GAUI;AACEC,MAAAA,UAAU,EAAE,OADd;AAEJ;AACMC,MAAAA,aAAa,EAAE,CAACb,QAAQ,CAACc,IAAT,CAAcC,iBAAd,CAAgCC,WAAjC,CAHjB;AAIEC,MAAAA,SAAS,EACP;AACE;AACAC,QAAAA,2BAA2B,EAAE,MAAM;AAFrC;AALJ,KAVJ;AAAA;;AAsBA;AACA;AACA;AACA;AACyB,QAAjBC,iBAAiB,GAAG;AACxB,SAAKC,sBAAL,GAA8BpB,QAAQ,CAACc,IAAT,GAAgBO,kBAAhB,CACzBC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAACb,MAAAA,UAAU,EAAE,CAAC,CAACY;AAAf,KAAd,CADgB,CAA9B,CADwB,CAMvB;AACkB,GAjCvB,CAkCE;AAEA;AAEA;AACA;AAEA;;;AACAE,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,sBAAL;AACD,GA5CH,CA6CC;AACD;AACA;AACA;AACE;AACA;;;AACFK,EAAAA,MAAM,GAAG;AACL;AACA;AACA,QAAI,CAAC,KAAKhB,KAAL,CAAWC,UAAhB,EAA4B;AAC1B,0BAGE;AAAA,gCAEA;AAAI,UAAA,KAAK,EAAE;AAACgB,YAAAA,SAAS,EAAE,QAAZ;AAAuBC,YAAAA,KAAK,EAAE;AAA9B,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGE,QAAC,kBAAD;AAAoB,UAAA,QAAQ,EAAE,KAAKhB,QAAnC;AAA6C,UAAA,YAAY,EAAEX,QAAQ,CAACc,IAAT;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AASD;;AACD,wBACE;AAAA,6BAII,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA1EH,C,CA8EA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AAGA;AACA;AACA;;;AACC,SAASc,iBAAT,GACD;AAKE,sBACE;AAAS,IAAA,SAAS,EAAG,SAArB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA,8BAQN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARM,eASH;AAAK,QAAA,GAAG,EAAIjC,QAAZ;AAAsB,QAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cATG,eAWL;AAAA;AAAA;AAAA;AAAA,cAXK,qBAWM;AAAA;AAAA;AAAA;AAAA,cAXN,oBAWgB;AAAA;AAAA;AAAA;AAAA,cAXhB,oBAW0B;AAAA;AAAA;AAAA;AAAA,cAX1B,eAYL;AAAQ,QAAA,GAAG,EAAE,+DAAb;AAA6E,QAAA,KAAK,EAAC,KAAnF;AAAyF,QAAA,MAAM,EAAC,KAAhG;AAAsG,QAAA,WAAW,EAAC,GAAlH;AAAsH,QAAA,YAAY,EAAC,GAAnI;AAAuI,QAAA,WAAW,EAAC,GAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZK;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,C,CAGD;AACA;;;KAhCUiC,iB;;AAkCV,eAAeC,UAAf,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,KAAvC,EAA8C;AAE5C,QAAMC,KAAK,GAAG,MAAMjC,QAAQ,CAACc,IAAT,GAAgBoB,WAAhB,CAA4BC,UAA5B,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAH4C,CAK5C;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;;AACAnC,EAAAA,KAAK,CAACwC,IAAN,CAAW,qDAAX,EACA;AACEC,IAAAA,OAAO,EAAET,IADX;AAEEU,IAAAA,YAAY,EAAET,KAFhB;AAGEU,IAAAA,QAAQ,EAAET;AAHZ,GADA,EAvB4C,CA6B5C;AACC;;MA9BYH,U;;AAgCb,SAASa,UAAT,GAAsB;AACpB;AACE5C,EAAAA,KAAK,CAAC6C,GAAN,CAAU,iDAAV,EAA6DC,IAA7D,CAAkEC,WAAW,IAAI;AAGnFT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,WAAW,CAACC,IAAxB;AACAC,IAAAA,KAAK,CAACF,WAAW,CAACC,IAAb,CAAL;AACJ,QAAIE,QAAQ,GAAGH,WAAW,CAACC,IAAZ,CAAiBG,QAAhC;AACA,QAAIC,SAAS,GAAGL,WAAW,CAACC,IAAZ,CAAiBK,SAAjC;AACA,QAAIC,OAAO,GAAGP,WAAW,CAACC,IAAZ,CAAiBO,OAA/B;AACAN,IAAAA,KAAK,CAAC,+BAA8BC,QAA9B,GAAyC,kCAAzC,GAAgFE,SAAhF,GAA2F,gCAA3F,GAA6HE,OAA9H,CAAL;AACG,GATG;AAUD,C,CAOL;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;MAnCWV,U;AAqCX,eAAenC,YAAf,C,CACA;AAIA;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './App.css';\nimport AdiaLogo from './AdiaLogo.png';\n\nimport React, { useState } from \"react\";\nimport axios from 'axios'\n\n//----------------------------------------------------------\n//Following Steps from Canvas: \n// 1.) Importing Firebase into App.js File\n//----------------------------------------------------------\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\n\n//----------------------------------------------------------\n//2.) Setting up Config: \n// Configure Firebase.\n//----------------------------------------------------------\n\nconst config = {  \n  apiKey: \"AIzaSyBM1b1wpI20J2BWg_u2mO7I5WxEo1SA6jo\",\n  authDomain: \"jsfirebaseproject-c8bde.firebaseapp.com\",\n};\n \n \n\n// Initialize Firebase\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(config);\n}\n//----------------------------------------------------------\n//3.) A State called \"Is Signed in\" is definted. \"\n//----------------------------------------------------------\n\nclass SignInScreen extends React.Component \n{\n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n  \n//----------------------------------------------------------\n//4.) uiConfig is used to configure firebaseui\n//----------------------------------------------------------\n  uiConfig = \n    {\n      signInFlow: 'popup',\n// 4.1  From Canvas instructions, i've changed this to email/password authentication\n      signInOptions: [firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks:  \n        {\n          // Avoid redirects after sign-in.\n          signInSuccessWithAuthResult: () => false\n        }\n    };\n\n\n//----------------------------------------------------------\n// 5.) A listener is created that listens for changes in sign in state from Firebase, \n// and updates your React component state with the new value\n//----------------------------------------------------------\n  async componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n        (user) => this.setState({isSignedIn: !!user})\n    );\n\n    \n     // this.setState({data:token})\n                      }\n  // async componentDidMount(){\n\n  // }\n\n  //5.1  ^^^^You can additionally save that user object in your React component's state so that you can use it later.\n  // Not sure what this means?\n  \n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n //----------------------------------------------------------\n// 5.)   In the render function, <StyledFirebaseAuth /> is added to the signed in view with 2 props\n// Q -What are props? \n//----------------------------------------------------------\n  //can't do comments in the render function - because inside render is JSX\n  //\nrender() {\n    //variable isSignedIn keeps track of sign in status\n    // hit command forward slash inside render to auto command\n    if (!this.state.isSignedIn) {\n      return (\n       \n\n        <div>\n        \n        <h1 style={{textAlign: \"center\",  color: \"Green\"}}>Welcome to the Pain Questionaire</h1>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        </div>\n      );\n    }\n    return (\n      <div>\n        \n    \n\n          <SignedInComponent> </SignedInComponent>\n\n      </div>\n    );\n  }\n}\n\n\n////HOW DO I GET TOKEN? \n// async componentDidMount() {\n//   //const token = await firebase.auth().\n//   const token = await firebase.auth().currentUser.getIdToken()\n\n  //currentUser.getIdToken()\n//this.setState({data: token})\n// }\n//----------------------------------------------------------\n\n\n//----------------------------------------------------------\n// II. SIGNED IN COMPONENT\n//----------------------------------------------------------\n function SignedInComponent() \n{\n\n \n  \n  \n  return (\n    <section className = \"section\">\n      <div className = \"Container1\">\n       \n{/* <button onClick={() => firebase.auth().signOut()}>Sign-out</button> */}\n \n\n\n\n{/* <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSelyZuJFakQZfTxyn_EZ4jDXTJiebOpn0c9oe4Xcdx0kJCUAQ/viewform?embedded=true\" width=\"700\" height=\"520\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading…</iframe> */}\n<h1> Pain Questionaire</h1> \n   <img src = {AdiaLogo} width=\"15%\"  />\n\n <br></br>  <br></br> <br></br> <br></br>\n <iframe src= \"https://cornell.ca1.qualtrics.com/jfe/form/SV_9nSqh9eVd3nTWcu\" width=\"900\" height=\"620\" frameborder=\"1\" marginheight=\"2\" marginwidth=\"0\">Loading…</iframe>\n\n</div>\n    </section>\n\n\n\n  )\n}\n\n\n// {const token = await firebase.auth().currentUser.getIdToken()}\n//var LocationOfPain = document.getElementById(\"demo1\").value;\n\nasync function SubmitData(Name, Name2, Name3) {\n  \n  const token = await firebase.auth().currentUser.getIdToken()\n  console.log(token)\n  \n  // const response = await fetch('<http://localhost:4000/dev/ReceivingDataFromFrontEnd>', \n  // {headers: { 'Authorization': idToken }})\n\n  // if (response.status === 401)\n  // {return console.log('unauthorized')}\n\n  // const order = await response.json()\n  // this.setState({orders: order})\n  // console.log(orders)\n\n  //alert('Variable is ' +Name );\n  //alert('Variable is ' +token ); //only need plus for concatenating var with string. \n  \n  \n  // TO LOCAL ENVIRONMENT: \n  //axios.post('http://localhost:4000/dev/ReceivingDataFromFrontEnd', \n  //DEPLOYED API: \n  //axios.post('https://ea0x278auf.execute-api.us-east-1.amazonaws.com/dev/ReceivingDataFromFrontEnd', \n  axios.post('http://localhost:4000/dev/ReceivingDataFromFrontEnd',\n  {\n    PainLoc: Name,\n    RadiationLoc: Name2,\n    Severity: Name3\n  });\n  //alert('Data Submitted! Token is: \\r\\n' +token )\n  }\n\n  function GetTheData() {\n    //axios.get('https://ea0x278auf.execute-api.us-east-1.amazonaws.com/dev/SendingDataToFrontEnd').then(BackEndData => {\n      axios.get('http://localhost:4000/dev/SendingDataToFrontEnd').then(BackEndData => {  \n   \n\n    console.log(BackEndData.data);\n    alert(BackEndData.data);\nvar UserName = BackEndData.data.username\nvar Paragraph = BackEndData.data.paragraph\nvar Numbers = BackEndData.data.numbers\nalert(\"Backend.data.username is: \" +UserName + \"\\r\\n Backend.data.paragraph is: \"   + Paragraph+ \"\\r\\n Backend.data.numbers is: \" +Numbers) \n  });\n    }\n\n\n\n\n\n\n//Submit Function has to get the data. \n//fetch(URL, put/post/ options)\n//simplest use of fetch takes in one argument - the path to the resource you want to fetch - and returns a promise containing the response \n//when the button clicks, there should be a string that looks like: \n//  fetch mdn in google.\n\n\n//----------------------------------------------------------\n// III.   OTHER FUNCTIONS: \n//----------------------------------------------------------\n// function login() {\n\n//   var userEmail = document.getElementById(\"email_field\").value;\n//   var userPass = document.getElementById(\"password_field\").value; \n//   window.alert(userEmail + ' ' + userPass)\n  \n//   }\n\nexport default SignInScreen;\n//export default SignedInComponent\n\n\n\n//----------------------------------------------------------\n// I.   END \n//----------------------------------------------------------\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n/*\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBM1b1wpI20J2BWg_u2mO7I5WxEo1SA6jo\",\n  authDomain: \"jsfirebaseproject-c8bde.firebaseapp.com\",\n  databaseURL: \"https://jsfirebaseproject-c8bde-default-rtdb.firebaseio.com\",\n  projectId: \"jsfirebaseproject-c8bde\",\n  storageBucket: \"jsfirebaseproject-c8bde.appspot.com\",\n  messagingSenderId: \"381754669941\",\n  appId: \"1:381754669941:web:9d748993adba847036313c\",\n  measurementId: \"G-RVGM15FDPY\"\n};\n\n*/\n\n/*\n function App() \n{\n  return (\n    \n    // Why can't this go here? <button > change what's displayed</button>\n//what is a section for? \n    <section className = \"section\"> \n      <div className = \"container has-text-centered\">\n\n        <h1 className = \"title\"> Functions created in App.JS  Displayed here</h1>\n        <div className = \"subtitle\">subtitle goes here - why is this in a div?? </div>\n        \n        <button>Sign in</button>\n        </div>\n    </section>\n  );\n}\n\n*/\n\n\n\n\n// I.   LANDING PAGE\n//----------------------------------------------------------\n// function LandingPage() \n// {\n//   return (\n    \n//     <div id = \"Main Page\" class = \"main-div\">\n//         <title> LANDING PAGE</title>\n//             <h3> Enter your Credentials</h3>\n//             <input type = \"email\" placeholder = \"Email...\" id = \"email_field\" />\n//             <input type = \"password\" placeholder = \"Password...\" id = \"password_field\"/>\n//             <button onclick = \"login()\"> Login to Account </button>\n//     </div>\n//   )\n// }"]},"metadata":{},"sourceType":"module"}