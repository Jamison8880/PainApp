{"ast":null,"code":"var _jsxFileName = \"/Users/jschultz/Desktop/FrontEnd2/src/App3.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport ImageMapper from 'react-image-mapper';\nimport { View, Text } from 'react-native';\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport one from './one.jpeg';\nimport logo from \"./logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomColor = () => {\n  //Function to return random color\n  //To highlight the mapping area\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n\n  for (var i = 0; i < 6; i++) color += letters[Math.floor(Math.random() * 16)];\n\n  return color;\n};\n\nconst App = () => {\n  _s();\n\n  //State for the selected area\n  const [selectedAreaId, setSelectedAreaId] = useState([]);\n\n  const mapperAreaClickHandler = async (item, idx, event) => {\n    const currentSelectedAreaId = selectedAreaId;\n\n    if (Array.isArray(currentSelectedAreaId)) {\n      const indexInState = currentSelectedAreaId.indexOf(item.id);\n\n      if (indexInState !== -1) {\n        console.log('Removing id', item.id);\n        setSelectedAreaId([...currentSelectedAreaId.slice(0, indexInState), ...currentSelectedAreaId.slice(indexInState + 1)]);\n      } else {\n        alert(`Clicked Item Id: ${item.id}`);\n        console.log('Setting Id', item.id);\n        setSelectedAreaId([...currentSelectedAreaId, item.id]);\n      }\n    } else {\n      if (item.id === currentSelectedAreaId) {\n        setSelectedAreaId(null);\n      } else {\n        setSelectedAreaId(item.id);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        fontSize: 30,\n        textAlign: 'center',\n        marginTop: 40\n      },\n      children: \"Image Mapper Example in React Native\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: {\n        fontSize: 25,\n        marginTop: 20,\n        marginBottom: 30,\n        textAlign: 'center'\n      },\n      children: \"www.aboutreact.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageMapper, {\n      imgHeight: 551,\n      imgWidth: 244,\n      imgSource: {\n        uri: 'https://raw.githubusercontent.com/msalo3/react-native-image-mapper/master/Examples/human.png'\n      },\n      imgMap: RECTANGLE_MAP,\n      onPress: (item, idx, event) => mapperAreaClickHandler(item, idx, event),\n      containerStyle: {\n        top: 10\n      },\n      selectedAreaId: selectedAreaId,\n      multiselect: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"u7JrbxGAA+EPE/PSmlgaZdnzVrk=\");\n\n_c = App;\nexport default App; // Maps to Create Clickable Areas\n\nconst RECTANGLE_MAP = [{\n  id: '0',\n  name: 'Left Foot',\n  shape: 'rectangle',\n  x2: 110,\n  y2: 540,\n  x1: 80,\n  y1: 500,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '1',\n  name: 'Right Foot',\n  shape: 'rectangle',\n  x2: 155,\n  y2: 540,\n  x1: 125,\n  y1: 500,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '2',\n  name: 'Left Knee',\n  shape: 'rectangle',\n  x2: 110,\n  y2: 400,\n  x1: 80,\n  y1: 370,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '3',\n  name: 'Right Knee',\n  shape: 'rectangle',\n  x2: 155,\n  y2: 400,\n  x1: 125,\n  y1: 370,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '4',\n  name: 'Stomach',\n  shape: 'rectangle',\n  x2: 155,\n  y2: 240,\n  x1: 80,\n  y1: 165,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '5',\n  name: 'Left Hand',\n  shape: 'rectangle',\n  x2: 40,\n  y2: 315,\n  x1: 5,\n  y1: 250,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '6',\n  name: 'Right Hand',\n  shape: 'rectangle',\n  x2: 235,\n  y2: 315,\n  x1: 200,\n  y1: 250,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '7',\n  name: 'Face',\n  shape: 'rectangle',\n  x2: 145,\n  y2: 70,\n  x1: 90,\n  y1: 30,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}, {\n  id: '8',\n  name: 'Head',\n  shape: 'rectangle',\n  x2: 145,\n  y2: 30,\n  x1: 90,\n  y1: 0,\n  prefill: getRandomColor(),\n  fill: 'blue'\n}]; // class SignInScreen extends React.Component \n// {\n// render() {\n//     return (\n//         <div>\n//           <SignedInComponent> </SignedInComponent>\n//         </div>\n//     );\n//   };\n// }\n//  function SignedInComponent() \n// {\n//   return (\n//     <section className = \"section\">\n//     <div className = \"Container1\">\n//           <h1> Welcome1</h1> \n//           {/* <img src={one} className=\"App-logo\" alt=\"logo\" /> */}\n//           <img src= {one} alt=\"Workplace\" usemap=\"#workmap\" width=\"500\" height=\"579\"/>\n// {/* <img src={require('/Users/jschultz/Desktop/CS5356/StartupSystems/FrontEnd2/src/one.jpeg')} /> */}\n// <map name=\"workmap\">\n//   <area shape=\"rect\" coords=\"34,44,270,350\" alt=\"Computer\" href=\"computer.htm\" strokeColor = \"black\" fillcolor =\"red\" />\n//   <area shape=\"rect\" coords=\"290,172,333,250\" alt=\"Phone\" href=\"phone.htm\"/>\n//   <area shape=\"circle\" coords=\"337,300,44\" alt=\"Cup of coffee\" href=\"coffee.htm\"/>\n// </map>\n//     </div>\n//     </section>\n//   )\n// }\n// export default SignInScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jschultz/Desktop/FrontEnd2/src/App3.js"],"names":["ImageMapper","View","Text","React","useState","axios","one","getRandomColor","letters","color","i","Math","floor","random","App","selectedAreaId","setSelectedAreaId","mapperAreaClickHandler","item","idx","event","currentSelectedAreaId","Array","isArray","indexInState","indexOf","id","console","log","slice","alert","flex","alignItems","padding","fontSize","textAlign","marginTop","marginBottom","uri","RECTANGLE_MAP","top","name","shape","x2","y2","x1","y1","prefill","fill"],"mappings":"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","sourcesContent":["import './App.css';\nimport ImageMapper from 'react-image-mapper';\nimport { View, Text } from 'react-native';\n\nimport React, { useState } from \"react\";\nimport axios from 'axios'\nimport one  from './one.jpeg'\nimport logo from './logo.svg';\n\nconst getRandomColor = () => {\n  //Function to return random color\n  //To highlight the mapping area\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (var i = 0; i < 6; i++)\n    color += letters[Math.floor(Math.random() * 16)];\n  return color;\n};\n\nconst App = () => {\n  //State for the selected area\n  const [selectedAreaId, setSelectedAreaId] = useState([]);\n\n  const mapperAreaClickHandler = async (item, idx, event) => {\n    const currentSelectedAreaId = selectedAreaId;\n    if (Array.isArray(currentSelectedAreaId)) {\n      const indexInState = currentSelectedAreaId.indexOf(item.id);\n      if (indexInState !== -1) {\n        console.log('Removing id', item.id);\n        setSelectedAreaId([\n          ...currentSelectedAreaId.slice(0, indexInState),\n          ...currentSelectedAreaId.slice(indexInState + 1),\n        ]);\n      } else {\n        alert(`Clicked Item Id: ${item.id}`);\n        console.log('Setting Id', item.id);\n        setSelectedAreaId([...currentSelectedAreaId, item.id]);\n      }\n    } else {\n      if (item.id === currentSelectedAreaId) {\n        setSelectedAreaId(null);\n      } else {\n        setSelectedAreaId(item.id);\n      }\n    }\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', padding: 30 }}>\n      <Text\n        style={{\n          fontSize: 30,\n          textAlign: 'center',\n          marginTop: 40\n        }}>\n        Image Mapper Example in React Native\n      </Text>\n      <Text\n          style={{\n            fontSize: 25,\n            marginTop: 20,\n            marginBottom: 30,\n            textAlign: 'center',\n          }}>\n          www.aboutreact.com\n        </Text>\n      <ImageMapper\n        imgHeight={551}\n        imgWidth={244}\n        imgSource={{\n          uri:\n            'https://raw.githubusercontent.com/msalo3/react-native-image-mapper/master/Examples/human.png',\n        }}\n        imgMap={RECTANGLE_MAP}\n        onPress={\n          (item, idx, event) => \n            mapperAreaClickHandler(item, idx, event)\n        }\n        containerStyle={{ top: 10 }}\n        selectedAreaId={selectedAreaId}\n        multiselect\n      />\n    </View>\n  );\n\n};\n\nexport default App;\n\n\n// Maps to Create Clickable Areas\nconst RECTANGLE_MAP = [\n  {\n    id: '0',\n    name: 'Left Foot',\n    shape: 'rectangle',\n    x2: 110,\n    y2: 540,\n    x1: 80,\n    y1: 500,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '1',\n    name: 'Right Foot',\n    shape: 'rectangle',\n    x2: 155,\n    y2: 540,\n    x1: 125,\n    y1: 500,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '2',\n    name: 'Left Knee',\n    shape: 'rectangle',\n    x2: 110,\n    y2: 400,\n    x1: 80,\n    y1: 370,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '3',\n    name: 'Right Knee',\n    shape: 'rectangle',\n    x2: 155,\n    y2: 400,\n    x1: 125,\n    y1: 370,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '4',\n    name: 'Stomach',\n    shape: 'rectangle',\n    x2: 155,\n    y2: 240,\n    x1: 80,\n    y1: 165,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '5',\n    name: 'Left Hand',\n    shape: 'rectangle',\n    x2: 40,\n    y2: 315,\n    x1: 5,\n    y1: 250,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '6',\n    name: 'Right Hand',\n    shape: 'rectangle',\n    x2: 235,\n    y2: 315,\n    x1: 200,\n    y1: 250,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '7',\n    name: 'Face',\n    shape: 'rectangle',\n    x2: 145,\n    y2: 70,\n    x1: 90,\n    y1: 30,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n  {\n    id: '8',\n    name: 'Head',\n    shape: 'rectangle',\n    x2: 145,\n    y2: 30,\n    x1: 90,\n    y1: 0,\n    prefill: getRandomColor(),\n    fill: 'blue',\n  },\n];\n// class SignInScreen extends React.Component \n// {\n// render() {\n  \n//     return (\n//         <div>\n//           <SignedInComponent> </SignedInComponent>\n//         </div>\n//     );\n//   };\n// }\n\n\n//  function SignedInComponent() \n// {\n\n//   return (\n//     <section className = \"section\">\n//     <div className = \"Container1\">\n//           <h1> Welcome1</h1> \n//           {/* <img src={one} className=\"App-logo\" alt=\"logo\" /> */}\n//           <img src= {one} alt=\"Workplace\" usemap=\"#workmap\" width=\"500\" height=\"579\"/>\n// {/* <img src={require('/Users/jschultz/Desktop/CS5356/StartupSystems/FrontEnd2/src/one.jpeg')} /> */}\n\n// <map name=\"workmap\">\n//   <area shape=\"rect\" coords=\"34,44,270,350\" alt=\"Computer\" href=\"computer.htm\" strokeColor = \"black\" fillcolor =\"red\" />\n//   <area shape=\"rect\" coords=\"290,172,333,250\" alt=\"Phone\" href=\"phone.htm\"/>\n//   <area shape=\"circle\" coords=\"337,300,44\" alt=\"Cup of coffee\" href=\"coffee.htm\"/>\n// </map>\n\n\n//     </div>\n  \n//     </section>\n\n\n\n//   )\n// }\n\n\n\n\n\n\n\n\n// export default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}